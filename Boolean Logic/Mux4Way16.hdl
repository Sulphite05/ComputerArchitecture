// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/Mux4Way16.hdl
/**
 * 4-way 16-bit multiplexor:
 * out = a if sel = 00
 *       b if sel = 01
 *       c if sel = 10
 *       d if sel = 11
 */
CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    
    PARTS:
    
    Not(in=sel[0] , out=selnot0 );
    Not(in=sel[1] , out=selnot1 );

    And(a=a[0] , b=selnot0 , out=outa0 );
    And(a=outa0 , b=selnot1 , out=outta0 );
    And(a=a[1] , b=selnot0 , out=outa1 );
    And(a=outa1 , b=selnot1 , out=outta1 );
    And(a=a[2] , b=selnot0 , out=outa2 );
    And(a=outa2 , b=selnot1 , out=outta2 );
    And(a=a[3] , b=selnot0 , out=outa3 );
    And(a=outa3 , b=selnot1 , out=outta3 );
    And(a=a[4] , b=selnot0 , out=outa4 );
    And(a=outa4 , b=selnot1 , out=outta4 );
    And(a=a[5] , b=selnot0 , out=outa5 );
    And(a=outa5 , b=selnot1 , out=outta5 );
    And(a=a[6] , b=selnot0 , out=outa6 );
    And(a=outa6 , b=selnot1 , out=outta6 );
    And(a=a[7] , b=selnot0 , out=outa7 );
    And(a=outa7 , b=selnot1 , out=outta7 );
    And(a=a[8] , b=selnot0 , out=outa8 );
    And(a=outa8 , b=selnot1 , out=outta8 );
    And(a=a[9] , b=selnot0 , out=outa9 );
    And(a=outa9 , b=selnot1 , out=outta9 );
    And(a=a[10] , b=selnot0 , out=outa10 );
    And(a=outa10 , b=selnot1 , out=outta10 );
    And(a=a[11] , b=selnot0 , out=outa11 );
    And(a=outa11 , b=selnot1 , out=outta11 );
    And(a=a[12] , b=selnot0 , out=outa12 );
    And(a=outa12 , b=selnot1 , out=outta12 );
    And(a=a[13] , b=selnot0 , out=outa13 );
    And(a=outa13 , b=selnot1 , out=outta13 );
    And(a=a[14] , b=selnot0 , out=outa14 );
    And(a=outa14 , b=selnot1 , out=outta14 );
    And(a=a[15] , b=selnot0 , out=outa15 );
    And(a=outa15 , b=selnot1 , out=outta15 );

    And(a=b[0] , b=sel[0] , out=outb0 );
    And(a=outb0 , b=selnot1 , out=outtb0 );
    And(a=b[1] , b=sel[0] , out=outb1 );
    And(a=outb1 , b=selnot1 , out=outtb1 );
    And(a=b[2] , b=sel[0] , out=outb2 );
    And(a=outb2 , b=selnot1 , out=outtb2 );
    And(a=b[3] , b=sel[0] , out=outb3 );
    And(a=outb3 , b=selnot1 , out=outtb3 );
    And(a=b[4] , b=sel[0] , out=outb4 );
    And(a=outb4 , b=selnot1 , out=outtb4 );
    And(a=b[5] , b=sel[0] , out=outb5 );
    And(a=outb5 , b=selnot1 , out=outtb5 );
    And(a=b[6] , b=sel[0] , out=outb6 );
    And(a=outb6 , b=selnot1 , out=outtb6 );
    And(a=b[7] , b=sel[0] , out=outb7 );
    And(a=outb7 , b=selnot1 , out=outtb7 );
    And(a=b[8] , b=sel[0] , out=outb8 );
    And(a=outb8 , b=selnot1 , out=outtb8 );
    And(a=b[9] , b=sel[0] , out=outb9 );
    And(a=outb9 , b=selnot1 , out=outtb9 );
    And(a=b[10] , b=sel[0] , out=outb10 );
    And(a=outb10 , b=selnot1 , out=outtb10 );
    And(a=b[11] , b=sel[0] , out=outb11 );
    And(a=outb11 , b=selnot1 , out=outtb11 );
    And(a=b[12] , b=sel[0] , out=outb12 );
    And(a=outb12 , b=selnot1 , out=outtb12 );
    And(a=b[13] , b=sel[0] , out=outb13 );
    And(a=outb13 , b=selnot1 , out=outtb13 );
    And(a=b[14] , b=sel[0] , out=outb14 );
    And(a=outb14 , b=selnot1 , out=outtb14 );
    And(a=b[15] , b=sel[0] , out=outb15 );
    And(a=outb15 , b=selnot1 , out=outtb15 );

    And(a=c[0] , b=selnot0 , out=outc0 );
    And(a=outc0 , b=sel[1] , out=outtc0 );
    And(a=c[1] , b=selnot0 , out=outc1 );
    And(a=outc1 , b=sel[1] , out=outtc1 );
    And(a=c[2] , b=selnot0 , out=outc2 );
    And(a=outc2 , b=sel[1] , out=outtc2 );
    And(a=c[3] , b=selnot0 , out=outc3 );
    And(a=outc3 , b=sel[1] , out=outtc3 );
    And(a=c[4] , b=selnot0 , out=outc4 );
    And(a=outc4 , b=sel[1] , out=outtc4 );
    And(a=c[5] , b=selnot0 , out=outc5 );
    And(a=outc5 , b=sel[1] , out=outtc5 );
    And(a=c[6] , b=selnot0 , out=outc6 );
    And(a=outc6 , b=sel[1] , out=outtc6 );
    And(a=c[7] , b=selnot0 , out=outc7 );
    And(a=outc7 , b=sel[1] , out=outtc7 );
    And(a=c[8] , b=selnot0 , out=outc8 );
    And(a=outc8 , b=sel[1] , out=outtc8 );
    And(a=c[9] , b=selnot0 , out=outc9 );
    And(a=outc9 , b=sel[1] , out=outtc9 );
    And(a=c[10] , b=selnot0 , out=outc10 );
    And(a=outc10 , b=sel[1] , out=outtc10 );
    And(a=c[11] , b=selnot0 , out=outc11 );
    And(a=outc11 , b=sel[1] , out=outtc11 );
    And(a=c[12] , b=selnot0 , out=outc12 );
    And(a=outc12 , b=sel[1] , out=outtc12 );
    And(a=c[13] , b=selnot0 , out=outc13 );
    And(a=outc13 , b=sel[1] , out=outtc13 );
    And(a=c[14] , b=selnot0 , out=outc14 );
    And(a=outc14 , b=sel[1] , out=outtc14 );
    And(a=c[15] , b=selnot0 , out=outc15 );
    And(a=outc15 , b=sel[1] , out=outtc15 );

    And(a=d[0] , b=sel[0] , out=outd0 );
    And(a=outd0 , b=sel[1] , out=outtd0 );
    And(a=d[1] , b=sel[0] , out=outd1 );
    And(a=outd1 , b=sel[1] , out=outtd1 );
    And(a=d[2] , b=sel[0] , out=outd2 );
    And(a=outd2 , b=sel[1] , out=outtd2 );
    And(a=d[3] , b=sel[0] , out=outd3 );
    And(a=outd3 , b=sel[1] , out=outtd3 );
    And(a=d[4] , b=sel[0] , out=outd4 );
    And(a=outd4 , b=sel[1] , out=outtd4 );
    And(a=d[5] , b=sel[0] , out=outd5 );
    And(a=outd5 , b=sel[1] , out=outtd5 );
    And(a=d[6] , b=sel[0] , out=outd6 );
    And(a=outd6 , b=sel[1] , out=outtd6 );
    And(a=d[7] , b=sel[0] , out=outd7 );
    And(a=outd7 , b=sel[1] , out=outtd7 );
    And(a=d[8] , b=sel[0] , out=outd8 );
    And(a=outd8 , b=sel[1] , out=outtd8 );
    And(a=d[9] , b=sel[0] , out=outd9 );
    And(a=outd9 , b=sel[1] , out=outtd9 );
    And(a=d[10] , b=sel[0] , out=outd10 );
    And(a=outd10 , b=sel[1] , out=outtd10 );
    And(a=d[11] , b=sel[0] , out=outd11 );
    And(a=outd11 , b=sel[1] , out=outtd11 );
    And(a=d[12] , b=sel[0] , out=outd12 );
    And(a=outd12 , b=sel[1] , out=outtd12 );
    And(a=d[13] , b=sel[0] , out=outd13 );
    And(a=outd13 , b=sel[1] , out=outtd13 );
    And(a=d[14] , b=sel[0] , out=outd14 );
    And(a=outd14 , b=sel[1] , out=outtd14 );
    And(a=d[15] , b=sel[0] , out=outd15 );
    And(a=outd15 , b=sel[1] , out=outtd15 );

    Or(a=outta0 , b=outtb0 , out=st0 );
    Or(a=st0 , b=outtc0 , out=stt0 );
    Or(a=stt0 , b=outtd0 , out=out[0] );

    Or(a=outta1 , b=outtb1 , out=st1 );
    Or(a=st1 , b=outtc1 , out=stt1 );
    Or(a=stt1 , b=outtd1 , out=out[1] );

    Or(a=outta2 , b=outtb2 , out=st2 );
    Or(a=st2 , b=outtc2 , out=stt2 );
    Or(a=stt2 , b=outtd2 , out=out[2] );

    Or(a=outta3 , b=outtb3 , out=st3 );
    Or(a=st3 , b=outtc3 , out=stt3 );
    Or(a=stt3 , b=outtd3 , out=out[3] );

    Or(a=outta4 , b=outtb4 , out=st4 );
    Or(a=st4 , b=outtc4 , out=stt4 );
    Or(a=stt4 , b=outtd4 , out=out[4] );

    Or(a=outta5 , b=outtb5 , out=st5 );
    Or(a=st5 , b=outtc5 , out=stt5 );
    Or(a=stt5 , b=outtd5 , out=out[5] );

    Or(a=outta6 , b=outtb6 , out=st6 );
    Or(a=st6 , b=outtc6 , out=stt6 );
    Or(a=stt6 , b=outtd6 , out=out[6] );

    Or(a=outta7 , b=outtb7 , out=st7 );
    Or(a=st7 , b=outtc7 , out=stt7 );
    Or(a=stt7 , b=outtd7 , out=out[7] );

    Or(a=outta8 , b=outtb8 , out=st8 );
    Or(a=st8 , b=outtc8 , out=stt8 );
    Or(a=stt8 , b=outtd8 , out=out[8] );

    Or(a=outta9 , b=outtb9 , out=st9 );
    Or(a=st9 , b=outtc9 , out=stt9 );
    Or(a=stt9 , b=outtd9 , out=out[9] );

    Or(a=outta10 , b=outtb10 , out=st10 );
    Or(a=st10 , b=outtc10 , out=stt10 );
    Or(a=stt10 , b=outtd10 , out=out[10] );

    Or(a=outta11 , b=outtb11 , out=st11 );
    Or(a=st11 , b=outtc11 , out=stt11 );
    Or(a=stt11 , b=outtd11 , out=out[11] );

    Or(a=outta12 , b=outtb12 , out=st12 );
    Or(a=st12 , b=outtc12 , out=stt12 );
    Or(a=stt12 , b=outtd12 , out=out[12] );

    Or(a=outta13 , b=outtb13 , out=st13 );
    Or(a=st13 , b=outtc13 , out=stt13 );
    Or(a=stt13 , b=outtd13 , out=out[13] );

    Or(a=outta14 , b=outtb14 , out=st14 );
    Or(a=st14 , b=outtc14 , out=stt14 );
    Or(a=stt14 , b=outtd14 , out=out[14] );

    Or(a=outta15 , b=outtb15 , out=st15 );
    Or(a=st15 , b=outtc15 , out=stt15 );
    Or(a=stt15 , b=outtd15 , out=out[15] );

    //// Replace this comment with your code.
}